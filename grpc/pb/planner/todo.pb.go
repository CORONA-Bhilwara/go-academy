// Code generated by protoc-gen-go. DO NOT EDIT.
// source: planner/todo.proto

package planner

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TodoRequest struct {
	Id                   *wrappers.Int64Value `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 *wrappers.BytesValue `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TodoRequest) Reset()         { *m = TodoRequest{} }
func (m *TodoRequest) String() string { return proto.CompactTextString(m) }
func (*TodoRequest) ProtoMessage()    {}
func (*TodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84f52620b5574d77, []int{0}
}

func (m *TodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoRequest.Unmarshal(m, b)
}
func (m *TodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoRequest.Marshal(b, m, deterministic)
}
func (m *TodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoRequest.Merge(m, src)
}
func (m *TodoRequest) XXX_Size() int {
	return xxx_messageInfo_TodoRequest.Size(m)
}
func (m *TodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TodoRequest proto.InternalMessageInfo

func (m *TodoRequest) GetId() *wrappers.Int64Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TodoRequest) GetData() *wrappers.BytesValue {
	if m != nil {
		return m.Data
	}
	return nil
}

type TodoResponse struct {
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodoResponse) Reset()         { *m = TodoResponse{} }
func (m *TodoResponse) String() string { return proto.CompactTextString(m) }
func (*TodoResponse) ProtoMessage()    {}
func (*TodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84f52620b5574d77, []int{1}
}

func (m *TodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoResponse.Unmarshal(m, b)
}
func (m *TodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoResponse.Marshal(b, m, deterministic)
}
func (m *TodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoResponse.Merge(m, src)
}
func (m *TodoResponse) XXX_Size() int {
	return xxx_messageInfo_TodoResponse.Size(m)
}
func (m *TodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TodoResponse proto.InternalMessageInfo

func (m *TodoResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*TodoRequest)(nil), "planner.TodoRequest")
	proto.RegisterType((*TodoResponse)(nil), "planner.TodoResponse")
}

func init() { proto.RegisterFile("planner/todo.proto", fileDescriptor_84f52620b5574d77) }

var fileDescriptor_84f52620b5574d77 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x8f, 0xcd, 0x4a, 0xc5, 0x30,
	0x10, 0x85, 0xe9, 0x0f, 0x0a, 0xd3, 0xae, 0x06, 0x85, 0x52, 0x41, 0xa4, 0x2b, 0x41, 0x48, 0x20,
	0x8a, 0x0f, 0xe0, 0x46, 0xdc, 0x56, 0x71, 0x9f, 0x92, 0xb1, 0x14, 0x4b, 0x26, 0x26, 0x29, 0xe2,
	0xdb, 0x8b, 0x4d, 0x85, 0x72, 0xe1, 0x2e, 0xee, 0xf6, 0xf0, 0x7d, 0x67, 0xce, 0x00, 0xba, 0x59,
	0x5b, 0x4b, 0x5e, 0x46, 0x36, 0x2c, 0x9c, 0xe7, 0xc8, 0x78, 0xbe, 0x65, 0xed, 0xf5, 0xc8, 0x3c,
	0xce, 0x24, 0xd7, 0x78, 0x58, 0x3e, 0xe4, 0xb7, 0xd7, 0xce, 0x91, 0x0f, 0x09, 0xec, 0x3e, 0xa1,
	0x7a, 0x63, 0xc3, 0x3d, 0x7d, 0x2d, 0x14, 0x22, 0xde, 0x41, 0x3e, 0x99, 0x26, 0xbb, 0xc9, 0x6e,
	0x2b, 0x75, 0x25, 0x92, 0x2b, 0xfe, 0x5d, 0xf1, 0x62, 0xe3, 0xe3, 0xc3, 0xbb, 0x9e, 0x17, 0xea,
	0xf3, 0xc9, 0xa0, 0x84, 0xd2, 0xe8, 0xa8, 0x9b, 0xfc, 0x08, 0xfe, 0xf4, 0x13, 0x29, 0x24, 0x7c,
	0x05, 0xbb, 0x0e, 0xea, 0x74, 0x2c, 0x38, 0xb6, 0x81, 0x10, 0x77, 0x05, 0x75, 0x62, 0x94, 0x85,
	0xf2, 0x8f, 0x41, 0x05, 0xc5, 0x33, 0x45, 0xbc, 0x10, 0xdb, 0x27, 0x62, 0x37, 0xb3, 0xbd, 0x3c,
	0x48, 0xb7, 0x3e, 0x05, 0xc5, 0xeb, 0x89, 0xce, 0x70, 0xb6, 0xce, 0xbd, 0xff, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0x47, 0x1d, 0x39, 0x65, 0x46, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoClient is the client API for Todo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoClient interface {
	Get(ctx context.Context, in *TodoRequest, opts ...grpc.CallOption) (*TodoResponse, error)
	Set(ctx context.Context, in *TodoRequest, opts ...grpc.CallOption) (*TodoResponse, error)
}

type todoClient struct {
	cc *grpc.ClientConn
}

func NewTodoClient(cc *grpc.ClientConn) TodoClient {
	return &todoClient{cc}
}

func (c *todoClient) Get(ctx context.Context, in *TodoRequest, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := c.cc.Invoke(ctx, "/planner.Todo/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) Set(ctx context.Context, in *TodoRequest, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := c.cc.Invoke(ctx, "/planner.Todo/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoServer is the server API for Todo service.
type TodoServer interface {
	Get(context.Context, *TodoRequest) (*TodoResponse, error)
	Set(context.Context, *TodoRequest) (*TodoResponse, error)
}

func RegisterTodoServer(s *grpc.Server, srv TodoServer) {
	s.RegisterService(&_Todo_serviceDesc, srv)
}

func _Todo_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planner.Todo/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).Get(ctx, req.(*TodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planner.Todo/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).Set(ctx, req.(*TodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Todo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "planner.Todo",
	HandlerType: (*TodoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Todo_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _Todo_Set_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "planner/todo.proto",
}
